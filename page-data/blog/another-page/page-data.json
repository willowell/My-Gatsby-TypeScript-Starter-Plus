{"componentChunkName":"component---src-templates-page-tsx","path":"/blog/another-page/","result":{"data":{"site":{"siteMetadata":{"title":"My Gatsby TypeScript Starter Plus","description":"A starter kit for TypeScript-based Gatsby projects with sensible defaults.","author":{"name":"William Howell","url":"https://github.com/willowell"}}},"markdownRemark":{"html":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Bonjour, tout le monde!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>:::Is this fun or what?:::</p>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> guess<span class=\"token punctuation\">:</span> u32 <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span> guess<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span>u32<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> num<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">Err</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please enter a number!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"d\"><pre class=\"language-d\"><code class=\"language-d\"><span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>conv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>stdio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> std<span class=\"token punctuation\">.</span>typecons<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> clid<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> clid<span class=\"token punctuation\">.</span>validate<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">struct</span> Options <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">@Parameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pattern\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token property\">@Required</span>\n\t<span class=\"token keyword\">string</span> pattern<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token property\">@Parameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file_path\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token property\">@Validate</span><span class=\"token operator\">!</span>isFile\n\t<span class=\"token property\">@Required</span>\n\t<span class=\"token keyword\">string</span> file_path<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tFile in_file<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> options <span class=\"token operator\">=</span> parseArguments<span class=\"token operator\">!</span><span class=\"token function\">Options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You entered: pattern: [\"</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">,</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">,</span>\n\t                  <span class=\"token string\">\" file_path: [\"</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// cli-d's isFile validation method effectively overrides this,</span>\n\t<span class=\"token comment\">// but I am leaving this here just in case.</span>\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\tin_file<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ErrnoException e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">writeln</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// Convert the contents of the file into an array of newline-delimited strings</span>\n\t<span class=\"token keyword\">auto</span> contents <span class=\"token operator\">=</span> in_file<span class=\"token punctuation\">.</span><span class=\"token function\">byLine</span><span class=\"token punctuation\">(</span>Yes<span class=\"token punctuation\">.</span>keepTerminator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> line<span class=\"token punctuation\">;</span> contents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">canFind</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>pattern<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">write</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CLICK THIS VIDEO TO ASCEND INSTANTLY</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1rem\" > <iframe src=\"https://www.youtube.com/embed/IndDk5xtye0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p><a href=\"/My-Gatsby-TypeScript-Starter-Plus/\">Thatâ€™s cool! Okay, take me back home.</a></p>","excerpt":":::Is this fun or what?::: CLICK THIS VIDEO TO ASCEND INSTANTLY Thatâ€™s cool! Okay, take me back home.","frontmatter":{"title":"Another Page"}}},"pageContext":{"slug":"/blog/another-page/"}}}