{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Table.js","webpack:///./src/pages/my-files.tsx"],"names":["forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","classes","table","createElement","responsiveClass","MyFiles","data","console","log","Page","Container","allFile","edges","map","index","node","key","relativePath","prettySize","extension","birthTime","query"],"mappings":"0NAsCe,EAjCH,IAAMA,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAUJ,EAAKI,QACfC,EAAWL,EAAKK,SAChBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAUT,EAAKS,QACfC,EAAaV,EAAKU,WAClBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIY,EAAoB,YAAmBV,EAAU,SACjDW,EAAU,IAAWV,EAAWS,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SE,EAAQ,IAAMC,cAAc,QAAS,YAAS,GAAIJ,EAAO,CAC3DR,UAAWU,EACXZ,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIM,EAAkBJ,EAAoB,cAM1C,MAJ0B,iBAAfF,IACTM,EAAkBA,EAAkB,IAAMN,GAGrC,IAAMK,cAAc,MAAO,CAChCZ,UAAWa,GACVF,GAGL,OAAOA,K,YCpCT,sCA0DeG,UAnCC,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,KAEjB,OADAC,QAAQC,IAAIF,GAEV,YAAC,IAAD,KACE,YAACG,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,KACE,uBACE,yCACA,YAAC,EAAD,CAAOd,KAAK,MACV,yBACE,sBACE,sCACA,oCACA,mCACA,qCAGJ,yBACGU,EAAKK,QAAQC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACtB,kBAAIC,IAAKF,GACP,sBAAKC,EAAKE,cACV,sBAAKF,EAAKG,YACV,sBAAKH,EAAKI,WACV,sBAAKJ,EAAKK,sBAvB9B,IAqCaC,EAAQ","file":"component---src-pages-my-files-tsx-b2f67d4d37a5da84a2bc.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PageLayout from \"../layouts/page\"\nimport Page from \"../components/Page\"\nimport Container from \"../components/Container\"\n\nimport { Table } from \"react-bootstrap\"\n\ninterface MyFilesProps {\n  data: {\n    allFile: {\n      edges: {\n        node: {\n          relativePath: any\n          prettySize: any\n          extension: any\n          birthTime: any\n        }\n      }\n    }\n  }\n}\n\nconst MyFiles = ({ data }: MyFilesProps) => {\n  console.log(data)\n  return (\n    <PageLayout>\n      <Page>\n        <Container>\n          <div>\n            <h1>My Site's Files</h1>\n            <Table size=\"sm\">\n              <thead>\n                <tr>\n                  <th>relativePath</th>\n                  <th>prettySize</th>\n                  <th>extension</th>\n                  <th>birthTime</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.allFile.edges.map(({ node }, index: number) => (\n                  <tr key={index}>\n                    <td>{node.relativePath}</td>\n                    <td>{node.prettySize}</td>\n                    <td>{node.extension}</td>\n                    <td>{node.birthTime}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </Container>\n      </Page>\n    </PageLayout>\n  )\n}\n\nexport default MyFiles\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}