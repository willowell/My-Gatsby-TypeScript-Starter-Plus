{"version":3,"sources":["webpack:///./src/templates/page.tsx"],"names":["query","PageTemplate","data","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,2GA8BaA,EAAQ,aAoCNC,UAdoC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpD,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,sBAAKA,EAAKC,eAAeC,YAAYC,OAErC,mBAAKC,wBAAyB,CAAEC,OAAQL,EAAKC,eAAeK","file":"component---src-templates-page-tsx-f60ca02d1779f6b8df8a.js","sourcesContent":["import * as React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\nimport MyNavbar from '../components/MyNavbar'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>{data.markdownRemark.frontmatter.title}</h1>\n          {/* eslint-disable-next-line react/no-danger */}\n          <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n        </Container>\n      </Page>\n    </IndexLayout>\n  )\n}\n\nexport default PageTemplate\n"],"sourceRoot":""}